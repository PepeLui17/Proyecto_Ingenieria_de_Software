<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.1.xsd">

        
    <!--
        Enable security, let the casAuthenticationEntryPoint handle all intercepted urls.
        The CAS_FILTER needs to be in the right position within the filter chain.
    --> 
    <sec:http entry-point-ref="casAuthenticationEntryPoint" auto-config="true" path-type="ant">
        
        <sec:custom-filter before="CAS_FILTER" ref="casSingleSignOutFilter"/>
        <sec:custom-filter after="CAS_FILTER"  ref="casAuthenticationFilter"/>
        <sec:intercept-url pattern="/administrador/*" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/vendedor/*" access="ROLE_VENDEDOR"/>
        <sec:intercept-url pattern="/*" access="ROLE_VENDEDOR"/>
      
        <sec:logout logout-success-url="https://quijote:8443/cas/logout" invalidate-session="true"/>
    </sec:http>
    
    
    <!--
        Required for the casProcessingFilter, so define it explicitly set and
        specify an Id Even though the authenticationManager is created by
        default when namespace based config is used.
    -->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="casAuthenticationProvider" />
    </sec:authentication-manager>
         
    
    <!--
        This section is used to configure CAS. The service is the
        actual redirect that will be triggered after the CAS login sequence.
    -->
    <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <property name="service" value="http://quijote:8081/pruebaCAS/j_spring_cas_security_check"/>
        <property name="sendRenew" value="false"/>
    </bean>
    
    
    <!--
        The CAS filter handles the redirect from the CAS server and starts the ticket validation.
    -->
    <bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>
    
    
    <!-- 
        Handles a logout request from the CAS server 
    -->   	
    <bean id="casSingleSignOutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />
    
        
    <!--
        The entryPoint intercepts all the CAS authentication requests.
        It redirects to the CAS loginUrl for the CAS login page.
    --> 
    <bean id="casAuthenticationEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="https://quijote:8443/cas/login"/>
        <property name="serviceProperties" ref="serviceProperties"/>
    </bean>
    
    
    <!--
       Handles the CAS ticket processing.
    -->
    <bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <!--
        <property name="userDetailsService" ref="userServices"/>
        -->
        <property name="userDetailsService" ref="authService"/>
        <property name="serviceProperties" ref="serviceProperties"/>
        <property name="ticketValidator">
            <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="https://quijote:8443/cas"/>
            </bean>
        </property>
        <property name="key" value="cas"/>
    </bean>
    
    
    <!--
        The users available for this application.
    -->
    <bean id="authService" class="com.donquijote.userdetails.MyUserDetailsService">
        <property name="empleadoDAO" ref="empleadoDAO"></property>
    </bean>
    
    <!--
    <sec:user-service id="userServices">
        <sec:user name="admin" password="1234" authorities="ROLE_ADMIN, ROLE_VENDEDOR"></sec:user>
        <sec:user name="jlmj" password="1234" authorities="ROLE_VENDEDOR"></sec:user>
    </sec:user-service>      
    -->
        
</beans>


